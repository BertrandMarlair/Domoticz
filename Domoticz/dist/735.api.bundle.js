exports.id=735,exports.ids=[735],exports.modules={18967:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=18967,e.exports=t},46700:(e,t,i)=>{var r={"./af":42786,"./af.js":42786,"./ar":30867,"./ar-dz":14130,"./ar-dz.js":14130,"./ar-kw":96135,"./ar-kw.js":96135,"./ar-ly":56440,"./ar-ly.js":56440,"./ar-ma":47702,"./ar-ma.js":47702,"./ar-sa":16040,"./ar-sa.js":16040,"./ar-tn":37100,"./ar-tn.js":37100,"./ar.js":30867,"./az":31083,"./az.js":31083,"./be":9808,"./be.js":9808,"./bg":68338,"./bg.js":68338,"./bm":67438,"./bm.js":67438,"./bn":8905,"./bn.js":8905,"./bo":11560,"./bo.js":11560,"./br":1278,"./br.js":1278,"./bs":80622,"./bs.js":80622,"./ca":2468,"./ca.js":2468,"./cs":5822,"./cs.js":5822,"./cv":50877,"./cv.js":50877,"./cy":47373,"./cy.js":47373,"./da":24780,"./da.js":24780,"./de":59740,"./de-at":60217,"./de-at.js":60217,"./de-ch":60894,"./de-ch.js":60894,"./de.js":59740,"./dv":5300,"./dv.js":5300,"./el":50837,"./el.js":50837,"./en-SG":85383,"./en-SG.js":85383,"./en-au":78348,"./en-au.js":78348,"./en-ca":77925,"./en-ca.js":77925,"./en-gb":22243,"./en-gb.js":22243,"./en-ie":46436,"./en-ie.js":46436,"./en-il":47207,"./en-il.js":47207,"./en-nz":76319,"./en-nz.js":76319,"./eo":92915,"./eo.js":92915,"./es":55655,"./es-do":55251,"./es-do.js":55251,"./es-us":71146,"./es-us.js":71146,"./es.js":55655,"./et":5603,"./et.js":5603,"./eu":77763,"./eu.js":77763,"./fa":76959,"./fa.js":76959,"./fi":11897,"./fi.js":11897,"./fo":94694,"./fo.js":94694,"./fr":94470,"./fr-ca":63049,"./fr-ca.js":63049,"./fr-ch":52330,"./fr-ch.js":52330,"./fr.js":94470,"./fy":5044,"./fy.js":5044,"./ga":29295,"./ga.js":29295,"./gd":2101,"./gd.js":2101,"./gl":38794,"./gl.js":38794,"./gom-latn":23168,"./gom-latn.js":23168,"./gu":95349,"./gu.js":95349,"./he":24206,"./he.js":24206,"./hi":30094,"./hi.js":30094,"./hr":30316,"./hr.js":30316,"./hu":22138,"./hu.js":22138,"./hy-am":11423,"./hy-am.js":11423,"./id":29218,"./id.js":29218,"./is":90135,"./is.js":90135,"./it":90626,"./it-ch":10150,"./it-ch.js":10150,"./it.js":90626,"./ja":39183,"./ja.js":39183,"./jv":24286,"./jv.js":24286,"./ka":12105,"./ka.js":12105,"./kk":47772,"./kk.js":47772,"./km":18758,"./km.js":18758,"./kn":79282,"./kn.js":79282,"./ko":33730,"./ko.js":33730,"./ku":1408,"./ku.js":1408,"./ky":33291,"./ky.js":33291,"./lb":36841,"./lb.js":36841,"./lo":55466,"./lo.js":55466,"./lt":57010,"./lt.js":57010,"./lv":37595,"./lv.js":37595,"./me":39861,"./me.js":39861,"./mi":35493,"./mi.js":35493,"./mk":95966,"./mk.js":95966,"./ml":87341,"./ml.js":87341,"./mn":5115,"./mn.js":5115,"./mr":10370,"./mr.js":10370,"./ms":9847,"./ms-my":41237,"./ms-my.js":41237,"./ms.js":9847,"./mt":72126,"./mt.js":72126,"./my":56165,"./my.js":56165,"./nb":64924,"./nb.js":64924,"./ne":16744,"./ne.js":16744,"./nl":93901,"./nl-be":59814,"./nl-be.js":59814,"./nl.js":93901,"./nn":83877,"./nn.js":83877,"./pa-in":15858,"./pa-in.js":15858,"./pl":64495,"./pl.js":64495,"./pt":89520,"./pt-br":57971,"./pt-br.js":57971,"./pt.js":89520,"./ro":96459,"./ro.js":96459,"./ru":21793,"./ru.js":21793,"./sd":40950,"./sd.js":40950,"./se":10490,"./se.js":10490,"./si":90124,"./si.js":90124,"./sk":64249,"./sk.js":64249,"./sl":14985,"./sl.js":14985,"./sq":51104,"./sq.js":51104,"./sr":49131,"./sr-cyrl":79915,"./sr-cyrl.js":79915,"./sr.js":49131,"./ss":85893,"./ss.js":85893,"./sv":98760,"./sv.js":98760,"./sw":91172,"./sw.js":91172,"./ta":27333,"./ta.js":27333,"./te":23110,"./te.js":23110,"./tet":52095,"./tet.js":52095,"./tg":27321,"./tg.js":27321,"./th":9041,"./th.js":9041,"./tl-ph":75768,"./tl-ph.js":75768,"./tlh":89444,"./tlh.js":89444,"./tr":72397,"./tr.js":72397,"./tzl":28254,"./tzl.js":28254,"./tzm":51106,"./tzm-latn":30699,"./tzm-latn.js":30699,"./tzm.js":51106,"./ug-cn":9288,"./ug-cn.js":9288,"./uk":67691,"./uk.js":67691,"./ur":13795,"./ur.js":13795,"./uz":6791,"./uz-latn":60588,"./uz-latn.js":60588,"./uz.js":6791,"./vi":65666,"./vi.js":65666,"./x-pseudo":14378,"./x-pseudo.js":14378,"./yo":75805,"./yo.js":75805,"./zh-cn":83839,"./zh-cn.js":83839,"./zh-hk":55726,"./zh-hk.js":55726,"./zh-tw":74152,"./zh-tw.js":74152};function s(e){var t=n(e);return i(t)}function n(e){if(!i.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}s.keys=function(){return Object.keys(r)},s.resolve=n,e.exports=s,s.id=46700},59388:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=59388,e.exports=t},68511:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=68511,e.exports=t},61009:(e,t,i)=>{"use strict";i.r(t);var r=i(99268),s=i.n(r),n=i(98605),a=i.n(n),o=i(10046),d=i.n(o),l=i(63395),c=i.n(l),u=i(32589),p=i.n(u),g=i(17846),y=i.n(g);var h=i(97280),w=i.n(h),m=i(85622),f=i.n(m),b=i(38137),_=i(34156),j=i.n(_);class v{constructor(){this.store=new Map,this.mems=new Map}memoize(e,...t){this.mems.has(e)||this.mems.set(e,j()(e,{normalizer:e=>JSON.stringify(e)}));const i=this.mems.get(e),r=JSON.stringify(t);return this.store.set(i,this.store.has(i)?[...this.store.get(i),r]:[r]),i(...t)}clear(){Array.from(this.store.entries()).forEach((([e,t])=>t.forEach((t=>e.delete(...JSON.parse(t))))))}}var I=i(49704),E=i(89135),T=i(28687);const k=async e=>{if(!e)throw new E.AuthenticationError("You must supply a JWT for authorization.");const t=await(async()=>{const{SECRET_REGISTER:e}=process.env,t=`\n        query keyRing {\n            keyRing (token: "${e}") {\n                accessPublicKey\n            }\n        }\n    `,{AUTH_HOST:i,AUTH_PORT:r}=process.env,s=await(0,T.request)(`http://${i}:${r}/graphql`,t).then((e=>e)).catch((e=>e));if(s.keyRing&&s.keyRing.accessPublicKey)return s.keyRing.accessPublicKey;throw new Error("Failed to get access token")})();try{return(0,I.verify)(e.replace("Bearer ",""),t,{algorithm:["RS256"]})}catch(e){throw console.log(e),new E.AuthenticationError("Invalid JWT")}};var A=i(96047);const S=(0,A.scalarType)({name:"Email",asNexusMethod:"email",description:"Email custom scalar type",Email:(...e)=>GraphQLEmail(...e)});var O=i(68303);const q=(0,A.scalarType)({name:"Json",asNexusMethod:"json",description:"Json custom scalar type",JSON:O.ZP,JSONObject:O.C1}),P={scalar:[S,(0,A.scalarType)({name:"Timestamp",asNexusMethod:"timestamp",description:"Unix Milliseconds Timestamp",serialize(e){if(isNaN(e))throw new Error("Timestamp isn't a valid timestamp value");return new Date(e).getTime()},parseValue(e){if(isNaN(parseFloat(e)))throw new Error("Timestamp isn't a valid timestamp value");return new Date(parseFloat(e)).getTime()},parseLiteral({value:e}){return new Date(this.parseValue(e)).getTime()}}),q],input:[(0,A.objectType)({name:"Delete",definition(e){e.int("id")}}),(0,A.objectType)({name:"Status",definition(e){e.string("title"),e.field("code",{type:"String",resolve:({statusCode:e})=>e}),e.string("color")}})]},H=(0,A.objectType)({name:"Application",definition(e){e.field("_id",{type:"ID"}),e.string("title"),e.string("description")}}),N={type:[H],query:[e=>e.list.field("getAllApplications",{type:H,nullable:!0,resolve:async(...e)=>await(async()=>[{_id:"891374917391",title:"Domotics",description:"this is a try"},{_id:"891374917392",title:"Jeedmon",description:"this is a try"}])(...e)})],mutation:[e=>e.field("editApplication",{type:H,resolve:async(...e)=>await(async()=>({}))(...e)})]},R=(0,A.objectType)({name:"Provider",definition(e){e.field("_id",{type:"ID"}),e.string("title"),e.string("slug"),e.string("icon"),e.string("button"),e.string("description")}});var D=i(25144),x=i(20501);const $={poolSize:10,bufferMaxEntries:0,useNewUrlParser:!0,useUnifiedTopology:!0},{MONGO_DOMOTICZ_HOSTNAME:B,MONGO_DOMOTICZ_NAME:C,MONGO_DOMOTICZ_PORT:U,MONGO_INITDB_ROOT_USERNAME:M,MONGO_INITDB_ROOT_PASSWORD:z}=process.env,L=j()((async()=>{try{const e=x.MongoClient.connect(`mongodb://${M}:${z}@${B}:${U}`,$);return await e.then((e=>e.db(C))).catch((e=>{console.log(e)}))||{error:"Impossible to connect to the database"}}catch(e){return{error:e.message}}})),Y=async(e,t)=>{const i=await L();return await i.collection(e).find(t).toArray()},G=async(e,t)=>{const i=await L();return await i.collection(e).findOne(t)},F=async(e,t)=>await G(e,{_id:new x.ObjectId(t)}),J=async(e,t,i)=>{const r=await L();return(await r.collection(e).updateMany({_id:new x.ObjectId(t)},i,{returnOriginal:!1})).value},W=async(e,t,i)=>await(async(e,t,i)=>{const r=await L();return(await r.collection(e).findOneAndUpdate(t,i,{returnOriginal:!1})).value})(e,{_id:new x.ObjectId(t)},i),Z=async(e,t)=>{const i=await L();return(await i.collection(e).insertOne(t)).ops[0]},K=async(e,t)=>{const i=await L();return await i.collection(e).deleteOne({_id:new x.ObjectId(t)})},Q=(0,A.inputObjectType)({name:"editProviderInput",definition(e){e.id("_id",{required:!0}),e.string("title",{required:!0}),e.string("description",{required:!0}),e.string("slug",{required:!0}),e.string("icon",{required:!0}),e.string("button",{required:!0})}}),V=(0,A.inputObjectType)({name:"createProviderInput",definition(e){e.string("title",{required:!0}),e.string("description",{required:!0}),e.string("slug",{required:!0}),e.string("icon",{required:!0}),e.string("button",{required:!0})}}),X="Providers",ee={type:[R],query:[e=>e.list.field("getAllProviders",{type:R,nullable:!0,resolve:async(...e)=>await(async()=>await Y(X,{}))(...e)})],mutation:[e=>e.field("createProvider",{type:R,args:{provider:(0,A.arg)({type:V,required:!0})},resolve:async(...e)=>await(async(e,{provider:t})=>{if(await G(X,{slug:t.slug}))throw new Error("provider.edit.errors.alreadyExist");return await Z(X,{...t})})(...e)}),e=>e.field("editProvider",{type:R,args:{provider:(0,A.arg)({type:Q,required:!0})},resolve:async(...e)=>await(async(e,{provider:t})=>{if(!await F(X,t._id))throw new Error("provider.edit.errors.notFound");return await W(X,t._id,{$set:{title:t.title,description:t.description,slug:t.slug,icon:t.icon,button:t.button}})})(...e)}),e=>e.field("deleteProvider",{type:R,args:{_id:(0,A.idArg)({required:!0})},resolve:async(...e)=>await(async(e,{_id:t})=>{const i=await F(X,t);if(!i)throw new Error("provider.edit.errors.notFound");return await K(X,t),i})(...e)})],input:[Q,V]},te=(0,A.objectType)({name:"Test",definition(e){e.field("_id",{type:"ID"}),e.string("title"),e.string("description")}}),ie={type:[te],query:[e=>e.list.field("getAllTests",{type:te,nullable:!0,resolve:async(...e)=>await(async()=>[{_id:"891374917391",title:"Domotics",description:"this is a test"},{_id:"891374917392",title:"Jeedmon",description:"this is a test"}])(...e)})],mutation:[e=>e.field("editTest",{type:te,resolve:async(...e)=>await(async()=>({}))(...e)})]},re=(0,A.objectType)({name:"Block",definition(e){e.field("_id",{type:"ID"}),e.string("title"),e.string("description")}}),se=async e=>await F(oe,e),ne=(0,A.inputObjectType)({name:"createBlockInput",definition(e){e.string("title",{required:!0}),e.string("description")}}),ae=(0,A.inputObjectType)({name:"editBlockInput",definition(e){e.string("id",{required:!0}),e.string("title",{required:!0}),e.string("description")}}),oe="Blocks",de={type:[re],query:[e=>e.list.field("getAllBlocks",{type:re,nullable:!0,resolve:async(...e)=>await(async()=>{const e=await Y(oe,{});if(e)return e})(...e)})],mutation:[e=>e.field("createBlock",{type:re,args:{block:(0,A.arg)({required:!0,type:ne})},resolve:async(...e)=>await(async(e,{block:t})=>{try{if(t?.title.length<2)throw new Error("error.validation.titleIsTooSmall");if(await(async e=>await G(oe,{title:e}))(t.title))throw new Error("contexttest.createBlock.errors.alreadyCreated");const e=await Z(oe,{title:t.title,description:t.description,createdAt:new Date,updatedAt:new Date});if(e&&e._id)return e;throw new Error("contexttest.createBlock.failedToCreateBlock")}catch(e){throw new b.ForbiddenError(e)}})(...e)}),e=>e.field("editBlock",{type:re,args:{block:(0,A.arg)({required:!0,type:ae})},resolve:async(...e)=>await(async(e,{block:t})=>{try{if(t?.title.length<2)throw new Error("error.validation.titleIsTooSmall");if(!await se(t.id))throw new Error("contexttest.editBlock.errors.noBlockFound");const e=await W(oe,t.id,{$set:{title:t.title,description:t.description,updatedAt:new Date}});if(e&&e._id)return e;throw new Error("contexttest.editBlock.failedToEditBlock")}catch(e){throw new b.ForbiddenError(e)}})(...e)}),e=>e.field("deleteBlock",{type:re,args:{_id:(0,A.idArg)({required:!0})},resolve:async(...e)=>await(async(e,{_id:t})=>{const i=await se(t);if(!i)throw new Error("contexttest.deleteBlock.errors.noBlockFound");return await K(oe,t),i})(...e)})],input:[ne,ae]},le=(0,A.objectType)({name:"PhilipsHueBridgeDetailsType",definition(e){e.string("name"),e.string("datastoreversion"),e.string("swversion"),e.string("apiversion"),e.string("mac"),e.string("bridgeid"),e.boolean("factorynew"),e.string("replacesbridgeid",{nullable:!0}),e.string("modelid"),e.string("starterkitid")}});var ce=i(45933);const ue=(e,t,i)=>{const r=[];for(const s of i)if(s._id.toString()===t.toString())for(let i of e)r.push({...s?.lights?.[i],bridgeId:t,lightId:i}??{});return r},pe=new(i.n(ce)())((e=>(e=>{const t=[...new Set(e.map((e=>e.lightIds)))],i=e.map((e=>e.bridgeId));return(async(e,t,i)=>{const r=await Y(Le,{_id:{$in:i.map((e=>new x.ObjectId(e)))}}),s=[];for(const i in e){let n=ue(e[i],t[i],r);s.push(n||[])}return s})(t,i,[...new Set(i)])})(e)),{cache:!1}),ge=(0,A.objectType)({name:"PhilipsHueLightXY",definition(e){e.float("x",{nullable:!0}),e.float("y",{nullable:!0})}}),ye=(0,A.objectType)({name:"PhilipsHueLightState",definition(e){e.boolean("on"),e.int("bri"),e.int("hue",{nullable:!0}),e.int("sat",{nullable:!0}),e.string("effect",{nullable:!0}),e.field("xy",{type:ge,resolve:async(...e)=>he(...e)}),e.string("alert"),e.int("ct"),e.string("colormode"),e.string("mode"),e.boolean("reachable")}}),he=async({xy:e})=>({x:e?.[0],y:e?.[1]}),we=(0,A.objectType)({name:"PhilipsHueLight",definition(e){e.id("bridgeId"),e.id("lightId"),e.string("name"),e.string("type"),e.string("modelid"),e.string("manufacturername"),e.string("productname"),e.string("uniqueid"),e.string("swversion"),e.string("swconfigid"),e.string("productid"),e.field("state",{type:ye})}});var me=i(9669),fe=i.n(me);const be=j()((()=>G(X,{slug:"philips_hue"})));fe().create().defaults.timeout=D.EE;const _e=async e=>await new Promise(((t,i)=>{const r=setTimeout((()=>{i(new Error("TIMEOUT"))}),1e3);fe()({method:"GET",url:`http://${e}/api/config/swupdate`}).then((e=>{clearTimeout(r),t(e)})).catch((e=>{clearTimeout(r),t({...e,error:!0})}))})),je=async(e="GET",t="",i)=>{const r=await be();if(r){const s=await Y(Le,{providerId:new x.ObjectId(r._id)});let n=[];for(let r of s)n.push(new Promise((s=>{fe()({method:e,url:`http://${r.ipAddress}/api/${r.token}/${t}`,data:i}).then((e=>s({...e,_id:r._id}))).catch((e=>s({...e,error:!0})))})));return Promise.allSettled(n).then((e=>e))}throw new Error("Provider not found")},ve=async(e="GET",t="",i,r)=>{if(i?.ipAddress&&i?.token)try{const s=await fe()({method:e,url:`http://${i.ipAddress}/api/${i.token}/${t}`,data:r});if(s?.data?.length>0)for(let e of s?.data)if(console.log(e),e?.error)throw new Error(e.error.description);return s}catch(e){throw new Error(e)}throw new Error("parameters are missing")},Ie=(0,A.objectType)({name:"PhilipsHueSceneLightState",definition(e){e.id("lightId"),e.id("bridgeId"),e.boolean("on"),e.int("bri"),e.int("ct",{nullable:!0}),e.field("xy",{type:ge,resolve:async(...e)=>Ee(...e)})}}),Ee=async({xy:e})=>({x:e?.[0],y:e?.[1]}),Te=(0,A.objectType)({name:"philipsHueScene",definition(e){e.id("bridgeId"),e.id("sceneId"),e.string("name"),e.string("group"),e.string("type"),e.list.field("lights",{type:we,resolve:async(...e)=>ke(...e)}),e.list.field("lightstates",{type:Ie,resolve:async(...e)=>Ae(...e)})}}),ke=async({lights:e,bridgeId:t})=>await pe.load({lightIds:e,bridgeId:t}),Ae=async({sceneId:e,bridgeId:t})=>{const i=await F(Le,t),r=await ve("GET",`scenes/${e}`,i);return Object.keys(r.data.lightstates).map((e=>({...r.data.lightstates[e],bridgeId:t,lightId:e})))},Se=(0,A.objectType)({name:"PhilipsHueGroupsState",definition(e){e.boolean("all_on"),e.boolean("any_on")}}),Oe=(0,A.objectType)({name:"PhilipsHueGroups",definition(e){e.id("groupId"),e.id("bridgeId"),e.string("name"),e.string("type"),e.string("class",{nullable:!0}),e.boolean("recycle"),e.list.field("lights",{type:we,resolve:async(...e)=>qe(...e)}),e.list.field("scenes",{type:Te,resolve:async(...e)=>Pe(...e)}),e.field("state",{type:Se})}}),qe=async({lights:e,bridgeId:t})=>await pe.load({lightIds:e,bridgeId:t}),Pe=async({groupId:e,bridgeId:t})=>{const i=await F(Le,t),r=Object.keys(i.scenes);let s=[];for(let n of r){const r=i.scenes[n];r.group===e&&s.push({bridgeId:t,sceneId:n,...r})}return s},He=(0,A.objectType)({name:"PhilipsHueBridge",definition(e){e.id("_id"),e.id("providerId"),e.string("ipAddress"),e.string("name"),e.string("token",{nullable:!0}),e.field("config",{type:le}),e.list.field("groups",{type:Oe,resolve:async(...e)=>Ne(...e)}),e.list.field("lights",{type:we,resolve:async(...e)=>Re(...e)})}}),Ne=async({_id:e,groups:t})=>Object.keys(t).map((i=>({...t[i],bridgeId:e,groupId:i}))).filter((e=>"Zone"===e.type)),Re=async({_id:e,lights:t})=>Object.keys(t).map((i=>({...t[i],bridgeId:e,lightId:i}))),De=(0,A.objectType)({name:"PhilipsHue",definition(e){e.field("_id",{type:"ID"}),e.string("title"),e.string("description"),e.list.field("bridges",{type:He,resolve:async(...e)=>xe(...e)})}}),xe=async({_id:e})=>await Y(Le,{providerId:e}),$e=(0,A.objectType)({name:"PhilipsHueBridgeStatus",definition(e){e.boolean("ok"),e.string("error",{nullable:!0}),e.string("bridgeId",{nullable:!0})}}),Be=(0,A.objectType)({name:"PhilipsHueSensor",definition(e){e.string("name"),e.string("type"),e.string("modelid"),e.string("manufacturername"),e.string("swversion"),e.string("uniqueid"),e.boolean("recycle")}}),Ce=(0,A.inputObjectType)({name:"PhilipsHueStateInput",definition(e){e.boolean("on"),e.int("bri"),e.int("hue"),e.int("sat"),e.int("ct"),e.string("scene"),e.list.float("xy")}}),Ue=new(i(27111).PubSub),Me=async()=>{const e=await je();if(e.length>0)for(let t of e)if(t?.value?.data){const{data:e,_id:i}=t.value;await J(Le,i,{$set:{...e}})}},ze=(0,A.objectType)({name:"Response",definition(e){e.boolean("ok"),e.string("error",{nullable:!0})}}),Le="Bridges",Ye={type:[De,He,$e,le,$e,we,ye,ge,Be,Se,Te,Ie],query:[e=>e.field("getPhilipsHueDevices",{type:De,nullable:!0,resolve:async(...e)=>await(async()=>await G(X,{slug:"philips_hue"}))(...e)}),e=>e.field("hueBridgeConnection",{type:$e,nullable:!0,args:{ipAddress:(0,A.stringArg)({required:!0})},resolve:async(...e)=>await(async(e,{ipAddress:t})=>{const i=await _e(t);return i?.data?.bridgeid?{ok:!0,bridgeId:i.data.bridgeid}:{ok:!1}})(...e)}),e=>e.field("hueBridgeRegister",{type:$e,nullable:!0,args:{ipAddress:(0,A.stringArg)({required:!0}),name:(0,A.stringArg)({required:!0})},resolve:async(...e)=>await(async(e,{ipAddress:t,name:i})=>{const r=await(async(e,t)=>await new Promise((i=>{fe()({method:"POST",url:`http://${e}/api`,data:{devicetype:t}}).then((e=>{i(e)})).catch((e=>{i({...e,error:!0})}))})))(t,i);if(await G(Le,{name:i}))throw new Error("This bridge is already added");if(r?.data?.[0]){const e=r?.data?.[0];if("link button not pressed"===e?.error?.description)return{ok:!1,error:e.error.description};if(e.success){const i=await G(X,{slug:"philips_hue"});return await Z(Le,{providerId:i._id,ipAddress:t,name:"Philips Hue",token:e.success.username}),{ok:!0}}throw new Error("Fail to get information from the bridge.")}throw new Error("Fail to get information from the bridge.")})(...e)}),e=>e.list.field("getScenesByGroup",{type:Te,nullable:!0,args:{groupId:(0,A.idArg)({required:!0}),bridgeId:(0,A.idArg)({required:!0})},resolve:async(...e)=>await(async(e,{bridgeId:t,groupId:i})=>{const r=await F(Le,t);if(!r)throw new Error("Bridge not found");const s=Object.keys(r.scenes);let n=[];for(let e of s){const s=r.scenes[e];s.group===i&&n.push({bridgeId:t,sceneId:e,...s})}return n.filter((e=>"HueEssentialsEffect"!==e.name))})(...e)}),e=>e.field("hueBridgeAddConnection",{type:$e,nullable:!0,args:{ipAddress:(0,A.stringArg)({required:!0})},resolve:async(...e)=>await(async(e,{ipAddress:t})=>{const i=await _e(t),r=await G(Le,{ipAddress:t});if(console.log(r),r)throw new Error("This bridge already exist");return i?.data?.bridgeid?{ok:!0,bridgeId:i.data.bridgeid}:{ok:!1}})(...e)})],mutation:[e=>e.field("editGroupState",{type:De,args:{bridgeId:(0,A.idArg)({required:!0}),groupId:(0,A.idArg)({required:!0}),state:(0,A.arg)({required:!0,type:Ce})},resolve:async(...e)=>await(async(e,{bridgeId:t,groupId:i,state:r})=>{const s=await F(Le,t);if(!s)throw new Error("bridge not found");await ve("PUT",`groups/${i}/action`,s,{...r}),await Me();const n=await G(X,{slug:"philips_hue"});return Ue.publish(D.RY.SYNC_PHILIPS_HUE,{philipsHue:n}),n})(...e)}),e=>e.field("editGroupStateWhitoutSync",{type:ze,args:{bridgeId:(0,A.idArg)({required:!0}),groupId:(0,A.idArg)({required:!0}),state:(0,A.arg)({required:!0,type:Ce})},resolve:async(...e)=>await(async(e,{bridgeId:t,groupId:i,state:r})=>{const s=await F(Le,t);if(!s)throw new Error("bridge not found");return ve("PUT",`groups/${i}/action`,s,r),{ok:!0}})(...e)}),e=>e.field("editLightState",{type:De,args:{bridgeId:(0,A.idArg)({required:!0}),lightId:(0,A.idArg)({required:!0}),state:(0,A.arg)({required:!0,type:Ce})},resolve:async(...e)=>await(async(e,{bridgeId:t,lightId:i,state:r})=>{const s=await F(Le,t);if(!s)throw new Error("bridge not found");await ve("PUT",`lights/${i}/state`,s,r),await Me();const n=await G(X,{slug:"philips_hue"});return Ue.publish(D.RY.SYNC_PHILIPS_HUE,{philipsHue:n}),n})(...e)}),e=>e.field("editLightStateWhitoutSync",{type:ze,args:{bridgeId:(0,A.idArg)({required:!0}),lightId:(0,A.idArg)({required:!0}),state:(0,A.arg)({required:!0,type:Ce})},resolve:async(...e)=>await(async(e,{bridgeId:t,lightId:i,state:r})=>{const s=await F(Le,t);if(!s)throw new Error("bridge not found");return ve("PUT",`lights/${i}/state`,s,r),{ok:!0}})(...e)}),e=>e.field("editBridgeName",{type:De,args:{bridgeId:(0,A.idArg)({required:!0}),name:(0,A.stringArg)({required:!0})},resolve:async(...e)=>await(async(e,{bridgeId:t,name:i})=>{console.log("bridgeId",t,i),await W(Le,t,{$set:{name:i}});const r=await F(Le,t);if(console.log(r?.config),!r)throw new Error("bridge not found");const s=await G(X,{slug:"philips_hue"});return Ue.publish(D.RY.SYNC_PHILIPS_HUE,{philipsHue:s}),s})(...e)}),e=>e.field("deleteBridge",{type:De,args:{bridgeId:(0,A.idArg)({required:!0})},resolve:async(...e)=>await(async(e,{bridgeId:t})=>{if(!await F(Le,t))throw new Error("bridge not found");await K(Le,t);const i=await G(X,{slug:"philips_hue"});return Ue.publish(D.RY.SYNC_PHILIPS_HUE,{philipsHue:i}),i})(...e)}),e=>e.field("editGroupConfig",{type:De,args:{bridgeId:(0,A.idArg)({required:!0}),groupId:(0,A.idArg)({required:!0}),name:(0,A.stringArg)({required:!0}),class:(0,A.stringArg)({required:!0}),lights:(0,A.idArg)({required:!0,list:!0})},resolve:async(...e)=>await(async(e,{bridgeId:t,groupId:i,name:r,class:s,lights:n})=>{const a=await F(Le,t);if(!a)throw new Error("bridge not found");await ve("PUT",`groups/${i}`,a,{name:r,lights:n,class:s}),await Me();const o=await G(X,{slug:"philips_hue"});return Ue.publish(D.RY.SYNC_PHILIPS_HUE,{philipsHue:o}),o})(...e)}),e=>e.field("addGroup",{type:De,args:{bridgeId:(0,A.idArg)({required:!0}),name:(0,A.stringArg)({required:!0}),class:(0,A.stringArg)({required:!0}),lights:(0,A.idArg)({required:!0,list:!0})},resolve:async(...e)=>await(async(e,{bridgeId:t,name:i,class:r,lights:s})=>{const n=await F(Le,t);if(!n)throw new Error("bridge not found");await ve("POST","groups",n,{name:i,lights:s,class:r,type:"Zone"}),await Me();const a=await G(X,{slug:"philips_hue"});return Ue.publish(D.RY.SYNC_PHILIPS_HUE,{philipsHue:a}),a})(...e)}),e=>e.field("deleteGroup",{type:De,args:{bridgeId:(0,A.idArg)({required:!0}),groupId:(0,A.idArg)({required:!0})},resolve:async(...e)=>await(async(e,{bridgeId:t,groupId:i})=>{const r=await F(Le,t);if(!r)throw new Error("bridge not found");await ve("DELETE",`groups/${i}`,r),await Me();const s=await G(X,{slug:"philips_hue"});return Ue.publish(D.RY.SYNC_PHILIPS_HUE,{philipsHue:s}),s})(...e)})],input:[Ce]},Ge=(0,A.objectType)({name:"SyncAll",definition(e){e.field("philipsHue",{type:De,resolve:async(...e)=>Fe(...e)})}}),Fe=async({philipsHue:e})=>e??await G(X,{slug:"philips_hue"});var Je=i(63403);const We=(0,A.subscriptionField)("syncAll",{type:Ge,subscribe:(0,Je.withFilter)((()=>Ue.asyncIterator(D.RY.SYNC_PHILIPS_HUE)),(async()=>!0)),resolve:e=>e}),Ze={type:[Ge],query:[e=>e.field("syncAll",{type:Ge,nullable:!0,resolve:async(...e)=>await(async()=>({philipsHue:await G(X,{slug:"philips_hue"})}))(...e)})],subscription:[We]},Ke=async(e,t)=>{const{RAPID_API_WEATHER_HOST:i,RAPID_API_KEY:r}=process.env;return await fe().get("https://community-open-weather-map.p.rapidapi.com/weather",{headers:{"x-rapidapi-key":r,"x-rapidapi-host":i,useQueryString:!0},params:{q:`${t},${e}`,units:"metric"}}).then((e=>e)).catch((e=>e))},Qe=(0,A.objectType)({name:"Weather",definition(e){e.field("_id",{type:"ID"}),e.string("city"),e.string("country"),e.float("visibility"),e.float("dt"),e.float("clouds",{resolve:async(...e)=>Xe(...e)}),e.float("wind",{resolve:async(...e)=>et(...e)}),e.float("humidity",{resolve:async(...e)=>Ve(...e)}),e.float("temp",{resolve:async(...e)=>tt(...e)}),e.float("feels_like",{resolve:async(...e)=>it(...e)}),e.float("temp_min",{resolve:async(...e)=>rt(...e)}),e.float("temp_max",{resolve:async(...e)=>st(...e)}),e.float("pressure",{resolve:async(...e)=>nt(...e)}),e.string("main",{resolve:async(...e)=>at(...e)}),e.string("description",{resolve:async(...e)=>ot(...e)}),e.string("icon",{resolve:async(...e)=>dt(...e)})}}),Ve=async({humidity:e,main:t})=>e||t.humidity,Xe=async({clouds:e})=>"string"==typeof e?e:e.all,et=async({wind:e})=>"string"==typeof e?e:e.speed,tt=async({temp:e,main:t})=>e||t.temp,it=async({feels_like:e,main:t})=>e||t.feels_like,rt=async({temp_min:e,main:t})=>e||t.temp_min,st=async({temp_max:e,main:t})=>e||t.temp_max,nt=async({pressure:e,main:t})=>e||t.pressure,at=async({main:e,weather:t})=>"string"==typeof e?e:t?.[0]?.main,ot=async({description:e,weather:t})=>e||t?.[0]?.description,dt=async({icon:e,weather:t})=>e||t?.[0]?.icon,lt=(0,A.subscriptionField)("syncWeather",{type:Qe,subscribe:(0,Je.withFilter)((()=>Ue.asyncIterator(D.RY.SYNC_WHEATER)),(async()=>!0)),resolve:e=>e}),ct="Weather",ut=[P,N,de,Ze,ee,Ye,{type:[Qe],query:[e=>e.field("getWeatherInfo",{type:Qe,nullable:!0,resolve:async(...e)=>await(async()=>{const e=await Y(ct,{});return e?.[0]?._id?e[0]:null})(...e)})],mutation:[e=>e.field("updateWeatherLocation",{type:Qe,args:{city:(0,A.stringArg)({required:!0}),country:(0,A.stringArg)({required:!0})},resolve:async(...e)=>await(async(e,{city:t,country:i})=>{const r=await Y(ct,{}),s=await Ke(i,t);if(console.log(s),200!==s.status)throw new Error("City not found");let n=null;return n=r?.[0]?._id?await W(ct,r[0]._id,{$set:{city:t,country:i,...s.data}}):await Z(ct,{city:t,country:i,...s.data}),n})(...e)})],subscription:[lt]},ie];var pt=i(13808);const{GRAPHQL_QUERY_MAX_DEPTH:gt,ACCESS_TOKEN:yt}=process.env,ht=(e,{context:t})=>(t.memoizer.clear(),e),wt=e=>(console.log("_________________________________"),console.log(e),console.log("_________________________________"),e),mt=(0,A.makeSchema)({types:[(ft=ut,(0,A.queryType)({definition(e){ft.forEach((t=>{t.query&&t.query.forEach((t=>{t(e)}))}))}})),(e=>e.map((e=>e.type)))(ut),(e=>(0,A.mutationType)({definition(t){e.forEach((e=>{e.mutation&&e.mutation.forEach((e=>{e(t)}))}))}}))(ut),(e=>e.map((e=>e.subscription)))(ut),(e=>e.map((e=>e.scalar)))(ut),(e=>e.map((e=>e.input)))(ut),(e=>e.map((e=>e.enum)))(ut),(e=>e.map((e=>e.union)))(ut)],outputs:{schema:f().join(__dirname.replace(/\/dist$/,"/bin"),"../../bin/portal_api_schema.graphql"),typegen:f().join(__dirname.replace(/\/dist$/,"/bin"),"../../bin/portal_api_schema_typegen.ts")}});var ft;const{REDIS_PORT:bt,REDIS_HOST:_t}=process.env;var jt=i(54005),vt=i.n(jt);const{REDIS_HOST:It,REDIS_PORT:Et}=process.env;var Tt=i(41976);var kt=i(95692);const At=c()(),St=s()(),Ot=a().createServer(St),{DOMOTICZ_HOST:qt,DOMOTICZ_PORT:Pt,NODE_ENV:Ht}=process.env;St.use(y()({origin:"*",credentials:!0})),St.use(d().text({type:"application/graphql"})),[{path:"/health",type:"get",controller:async(e,t)=>{try{return t.status(200).send("Health check success")}catch(e){return t.status(400).send(e.message)}}}].forEach((({type:e,path:t,controller:i})=>{St[e](t,((e,t)=>{i(e,t)}))})),At.start("Starting portal-api server...");const Nt=async()=>{try{const e=((e=!0)=>new b.ApolloServer({schema:mt,validationRules:[w()(gt)],playground:e,introspection:!0,tracing:!0,formatError:wt,formatResponse:ht,context:e=>(async e=>{let t,i;const r=e.req&&e.req.headers,s=e.connection&&e.connection.context;if(r){const e=r[yt];e&&(t=e.replace("Bearer ",""),i=await k(t))}if(s&&s&&s.headers.context){const e=s.headers.context,r=e.token||e[yt];r&&(t=r.replace("Bearer ",""),i=await k(t))}return{headers:r,memoizer:new v,token:t,identityEmail:i?.identity_email,currentUser:i}})(e),subscriptions:{onConnect:async e=>{if(e?.headers?.context){const t=e.headers.context;if(t.token||t[yt])return e}throw new Error("Missing auth token!")}},persistedQueries:{cache:new pt.ES({port:bt,host:_t}),ttl:900}}))("development"===Ht&&!0);e.installSubscriptionHandlers(Ot),e.applyMiddleware({app:St,path:"/"}),"true"!==process.env.INTERNAL&&("true"===process.env.INTERNAL?null:new(vt())(Et,It)).publish("updateServer","Restart Portal API"),Ot.listen(Pt,(()=>{At.succeed(),console.log(p().green("✓"),`Server ready. -> start on ${qt}:${Pt}/`)}))}catch(e){At.fail(),await(0,kt.Dc)(5e3),console.log("💣",e.message),console.log("💣","reconnecting in 5 seconds"),Nt()}};Nt(),new Tt.CronJob("*/3 * * * * *",(async()=>{const e=await je();if(e.length>0)for(let t of e)if(t?.value?.data){const{data:e,_id:i}=t.value;await J(Le,i,{$set:{...e}});const r=await G(X,{slug:"philips_hue"});Ue.publish(D.RY.SYNC_PHILIPS_HUE,{philipsHue:r})}}),null,!0,"Europe/Brussels").start(),(async()=>{new Tt.CronJob("*/15 * * * *",(async()=>{const e=await Y(ct,{});if(e?.[0]?._id){const t=await Ke(e[0].country,e[0].city);200===t.status&&await W(ct,e[0]._id,{$set:{...t.data}});const i=await F(ct,e[0]._id);Ue.publish(D.RY.SYNC_WHEATER,i)}}),null,!0,"Europe/Brussels").start()})(),Ot.on("error",(e=>{At.fail(),console.log(e),console.log("💣",p().red("error:"),e.message)}))}};