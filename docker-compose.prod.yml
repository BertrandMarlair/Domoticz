version: '3.8'
services:
  domoticz:
    image: bertrandmarlair/domotics:arm
    networks:
      - webnet
  authentification:
    image: bertrandmarlair/authentification:arm
    networks:
      - webnet
  gateway:
    image: bertrandmarlair/gateway:arm
    networks:
      - webnet
  nginx: 
    image: bertrandmarlair/nginx:arm
    depends_on: 
      - gateway
      - client
    networks:
      - webnet
    labels: 
      - "traefik.enable=true"
      - "traefik.docker.network=webnet"

      - traefik.http.routers.${ENV_NAME}-http.entrypoints=webinsecure
      - traefik.http.routers.${ENV_NAME}-http.rule=Host(`${ENV_NAME}.${ENV_DOMAIN}`)
      
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.http.routers.${ENV_NAME}-http.middlewares=https-redirect@docker
      
      - traefik.http.routers.${ENV_NAME}-https.entrypoints=websecure
      - traefik.http.routers.${ENV_NAME}-https.rule=Host(`${ENV_NAME}.${ENV_DOMAIN}`)
      - traefik.http.routers.${ENV_NAME}-https.tls=true
      - traefik.http.routers.${ENV_NAME}-https.tls.certresolver=letsencrypt
      - "port: 80"
    expose: 
      - 80
    logging:
      options:
        max-size: 10m
  config:
    image: bertrandmarlair/config:arm
    environment:
      - DOMAIN=https://${ENV_NAME}.${ENV_DOMAIN}
      - ENV_NAME=${ENV_NAME}
      - CORS=false
    networks:
      - webnet
  redis:
    image: "bitnami/redis:5.0.10"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - webnet
    ports:
      - "6379:6379"
    expose: 
      - "6379"
    logging:
      options:
        max-size: 1m
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 60s
      timeout: 10s
      retries: 30
  mongo_auth: 
    image: bertrandmarlair/mongo_auth:arm
    restart: always
    volumes: 
      - ./MongoAuth/db:/data/db
    env_file:
      - ./MongoAuth/.env
    networks:
      - webnet
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 40s
  mongo_domoticz: 
    image: bertrandmarlair/mongo_domoticz:arm
    restart: always
    volumes: 
      - ./MongoDomoticz/db:/data/db
    env_file:
      - ./MongoDomoticz/.env
    networks:
      - webnet
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 40s
  client:
    image: bertrandmarlair/client:arm
    networks:
      - webnet
    volumes:
      - ./client/env.js:/app/build/env.js
  traefik:
    image: traefik:v2.4.0-rc1
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.webinsecure.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.postgresql.address=:5432"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=bertrand@bfine.be"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--pilot.token=52676dbe-0ff0-4be1-9597-60d8884c533b"
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "./letsencrypt:/letsencrypt"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
networks:
  webnet:
    driver: bridge